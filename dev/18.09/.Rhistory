#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
View(tspred_1_eval)
attr(obj$sw,"train_data")
attr(obj$sw,"train_data")
source('~/GitHub/TSPred/dev/18.09/modeling.r')
source('~/GitHub/TSPred/dev/18.09/tspred.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list(),sw=proc4,proc=list(MM=proc7))
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
#SW=proc4,
#MM=proc7),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
View(tspred_1_eval)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list(),sw=proc4,proc=list(MM=proc7))
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
#SW=proc4,
#MM=proc7),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
View(tspred_1_eval)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list(),sw=proc4,proc=list(MM=proc7))
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
#SW=proc4,
#MM=proc7),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list(),sw=proc4,proc=list(MM=proc7))
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
#SW=proc4,
#MM=proc7),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
length(mdl)
data
data[1]
source('~/GitHub/TSPred/dev/18.09/modeling.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list(),sw=proc4,proc=list(MM=proc7))
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
#SW=proc4,
#MM=proc7),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
names(mdl)
names(data)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list(),sw=proc4,proc=list(MM=proc7))
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
#SW=proc4,
#MM=proc7),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list(),sw=proc4,proc=list(MM=proc7))
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
#SW=proc4,
#MM=proc7),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list(),sw=proc4,proc=list(MM=proc7))
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
#SW=proc4,
#MM=proc7),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list(),sw=proc4,proc=list(MM=proc7))
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
#SW=proc4,
#MM=proc7),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list(),sw=proc4,proc=list(MM=proc7))
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
#SW=proc4,
#MM=proc7),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
attr(obj$sw,"train_data")
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
View(tspred_1_pred)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
source('~/GitHub/TSPred/dev/18.09/tspred.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list(),sw=proc4,proc=list(MM=proc7))
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
#SW=proc4,
#MM=proc7),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
View(tspred_1_eval)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list(),sw=proc4,proc=list(MM=proc7))
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
#SW=proc4,
#MM=proc7),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
View(tspred_1_eval)
res(mdl_res)
res(mdl_res)[[1]]
source('~/GitHub/TSPred/dev/18.09/tspred.r')
source('~/GitHub/TSPred/dev/18.09/tspred.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list(),sw=proc4,proc=list(MM=proc7))
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
#SW=proc4,
#MM=proc7),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
View(tspred_1_eval)
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list(),sw=proc4,proc=list(MM=proc7))
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
#SW=proc4,
#MM=proc7),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
View(tspred_1_eval)
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list(),sw=proc4,proc=list(MM=proc7))
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
#SW=proc4,
#MM=proc7),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
View(tspred_1_eval)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
source('~/GitHub/TSPred/dev/18.09/modeling.r')
save.image("~/GitHub/TSPred/dev/18.09/Usage.RData")
