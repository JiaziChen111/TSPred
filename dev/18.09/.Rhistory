#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3,
MM=proc7,
SW=proc4,
NAS=proc6),
modeling=modl2,
evaluating=list(MSE=eval1)
)
summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE, input_test_data=TRUE)
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
View(tspred_1_eval)
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list())
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3,
MM=proc7,
SW=proc4,
NAS=proc6),
modeling=modl2,
evaluating=list(MSE=eval1)
)
summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=FALSE, input_test_data=TRUE)
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
View(tspred_1_eval)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=FALSE, input_test_data=TRUE)
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
View(tspred_1_eval)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=FALSE, input_test_data=TRUE)
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
View(tspred_1_eval)
library("forecast", lib.loc="~/R/win-library/3.5")
source('~/GitHub/TSPred/dev/18.09/processing.r')
source('~/GitHub/TSPred/dev/18.09/tspred.r')
source('~/GitHub/TSPred/dev/18.09/methods_generics.r')
source('~/GitHub/TSPred/dev/18.09/result.r')
source('~/GitHub/TSPred/dev/18.09/processing.r')
source('~/GitHub/TSPred/dev/18.09/processing_subclasses.r')
source('~/GitHub/TSPred/dev/18.09/modeling.r')
source('~/GitHub/TSPred/dev/18.09/modeling_subclasses.r')
source('~/GitHub/TSPred/dev/18.09/evaluating.r')
source('~/GitHub/TSPred/dev/18.09/evaluating_subclasses.r')
source('~/GitHub/TSPred/dev/18.09/tspred.r')
source('~/GitHub/TSPred/dev/18.09/Usage.r')
source('~/GitHub/TSPred/dev/18.09/tspred.r')
source('~/GitHub/TSPred/dev/18.09/Usage.r')
source('~/GitHub/TSPred/dev/18.09/modeling.r')
#library(TSPred)
#data("CATS")
#Defining (not running) the components/steps of the time series prediction workflow
#Obtaining objects of the processing class
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list())
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3,
MM=proc7,
SW=proc4,
NAS=proc6),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=FALSE)
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
View(tspred_1_eval)
#Defining (not running) the first time series prediction process
tspred_2_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
modeling=modl1,
evaluating=list(MSE=eval1)
)
#summary(tspred_2_specs)
#Running the first time series prediction process
tspred_2_subset <- subset(tspred_2_specs, data=CATS[3])
tspred_2_prep <- preprocess(tspred_2_subset,prep_test=FALSE)
tspred_2_train <- train(tspred_2_prep)
tspred_2_pred <- predict(tspred_2_train, onestep=FALSE)
tspred_2_postp <- postprocess(tspred_2_pred)
tspred_2_eval <- evaluate(tspred_2_postp)
View(tspred_2_eval)
View(tspred_1_eval)
View(tspred_2_eval)
attributes(tspred_1_eval$data$prep$test$W1)
attributes(tspred_1_eval$data$prep$test)
fitted(tspred_1_eval$model$W1)
fitted(tspred_2_eval$model$W1)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
source('~/GitHub/TSPred/dev/18.09/tspred.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list())
#Obtaining objects of the evaluating class
eval1 <- MSE()
tspred_2_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
modeling=modl1,
evaluating=list(MSE=eval1)
)
#summary(tspred_2_specs)
#Running the first time series prediction process
tspred_2_subset <- subset(tspred_2_specs, data=CATS[3])
tspred_2_prep <- preprocess(tspred_2_subset,prep_test=FALSE)
tspred_2_train <- train(tspred_2_prep)
tspred_2_pred <- predict(tspred_2_train, onestep=TRUE)
tspred_2_postp <- postprocess(tspred_2_pred)
tspred_2_eval <- evaluate(tspred_2_postp)
View(tspred_2_eval)
length(tspred_2_eval$data$test)
CATS[[1]]
source('~/GitHub/TSPred/dev/18.09/modeling.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list())
#Obtaining objects of the evaluating class
eval1 <- MSE()
tspred_2_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
modeling=modl1,
evaluating=list(MSE=eval1)
)
#summary(tspred_2_specs)
#Running the first time series prediction process
tspred_2_subset <- subset(tspred_2_specs, data=CATS[3])
tspred_2_prep <- preprocess(tspred_2_subset,prep_test=FALSE)
tspred_2_train <- train(tspred_2_prep)
tspred_2_pred <- predict(tspred_2_train, onestep=TRUE)
tspred_2_postp <- postprocess(tspred_2_pred)
tspred_2_eval <- evaluate(tspred_2_postp)
View(tspred_2_eval)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
tspred_2_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
modeling=modl1,
evaluating=list(MSE=eval1)
)
#summary(tspred_2_specs)
#Running the first time series prediction process
tspred_2_subset <- subset(tspred_2_specs, data=CATS[3])
tspred_2_prep <- preprocess(tspred_2_subset,prep_test=FALSE)
tspred_2_train <- train(tspred_2_prep)
tspred_2_pred <- predict(tspred_2_train, onestep=TRUE)
tspred_2_postp <- postprocess(tspred_2_pred)
tspred_2_eval <- evaluate(tspred_2_postp)
View(tspred_2_eval)
length(data)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
source('~/GitHub/TSPred/dev/18.09/tspred.r')
tspred_2_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
modeling=modl1,
evaluating=list(MSE=eval1)
)
#summary(tspred_2_specs)
#Running the first time series prediction process
tspred_2_subset <- subset(tspred_2_specs, data=CATS[3])
tspred_2_prep <- preprocess(tspred_2_subset,prep_test=FALSE)
tspred_2_train <- train(tspred_2_prep)
tspred_2_pred <- predict(tspred_2_train, onestep=TRUE)
tspred_2_postp <- postprocess(tspred_2_pred)
tspred_2_eval <- evaluate(tspred_2_postp)
View(tspred_2_eval)
obj$data$test
!is.null(obj$data$test))
!is.null(obj$data$test)
View(data)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
source('~/GitHub/TSPred/dev/18.09/modeling.r')
tspred_2_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
modeling=modl1,
evaluating=list(MSE=eval1)
)
#summary(tspred_2_specs)
#Running the first time series prediction process
tspred_2_subset <- subset(tspred_2_specs, data=CATS[3])
tspred_2_prep <- preprocess(tspred_2_subset,prep_test=FALSE)
tspred_2_train <- train(tspred_2_prep)
tspred_2_pred <- predict(tspred_2_train, onestep=TRUE)
tspred_2_postp <- postprocess(tspred_2_pred)
tspred_2_eval <- evaluate(tspred_2_postp)
View(tspred_2_eval)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list())
#Obtaining objects of the evaluating class
eval1 <- MSE()
tspred_2_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
modeling=modl1,
evaluating=list(MSE=eval1)
)
#summary(tspred_2_specs)
#Running the first time series prediction process
tspred_2_subset <- subset(tspred_2_specs, data=CATS[3])
tspred_2_prep <- preprocess(tspred_2_subset,prep_test=FALSE)
tspred_2_train <- train(tspred_2_prep)
tspred_2_pred <- predict(tspred_2_train, onestep=TRUE)
tspred_2_postp <- postprocess(tspred_2_pred)
tspred_2_eval <- evaluate(tspred_2_postp)
View(tspred_2_eval)
length(data)
View(tspred_1_train)
View(tspred_2_train)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
source('~/GitHub/TSPred/dev/18.09/modeling.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list())
#Obtaining objects of the evaluating class
eval1 <- MSE()
tspred_2_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
modeling=modl1,
evaluating=list(MSE=eval1)
)
#summary(tspred_2_specs)
#Running the first time series prediction process
tspred_2_subset <- subset(tspred_2_specs, data=CATS[3])
tspred_2_prep <- preprocess(tspred_2_subset,prep_test=FALSE)
tspred_2_train <- train(tspred_2_prep)
tspred_2_pred <- predict(tspred_2_train, onestep=TRUE)
tspred_2_postp <- postprocess(tspred_2_pred)
tspred_2_eval <- evaluate(tspred_2_postp)
View(tspred_2_eval)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list())
#Obtaining objects of the evaluating class
eval1 <- MSE()
tspred_2_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
modeling=modl1,
evaluating=list(MSE=eval1)
)
#summary(tspred_2_specs)
#Running the first time series prediction process
tspred_2_subset <- subset(tspred_2_specs, data=CATS[3])
tspred_2_prep <- preprocess(tspred_2_subset,prep_test=FALSE)
tspred_2_train <- train(tspred_2_prep)
tspred_2_pred <- predict(tspred_2_train, onestep=TRUE)
tspred_2_postp <- postprocess(tspred_2_pred)
tspred_2_eval <- evaluate(tspred_2_postp)
View(tspred_2_eval)
length(data)
series(mdl_i)
x(mdl_i)
fitted(mdl_i)+residuals(mdl_i)
any(mdl_i$x==c(fitted(mdl_i)+residuals(mdl_i)))
any(mdl_i$x!=c(fitted(mdl_i)+residuals(mdl_i)))
any(round(mdl_i$x,5)!=round(fitted(mdl_i)+residuals(mdl_i),5))
all(round(mdl_i$x,5)==round(fitted(mdl_i)+residuals(mdl_i),5))
all(round(mdl_i$x,8)==round(fitted(mdl_i)+residuals(mdl_i),8))
library("TSPred", lib.loc="~/R/win-library/3.5")
call(tspred_2_eval$model$W1)
call(tspred_2_eval$model$W1$call)
class(tspred_2_eval$model$W1$call)
eval(tspred_2_eval$model$W1$call)
test <- eval(tspred_2_eval$model$W1$call)
names(tspred_2_eval$model$W1$call)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
tspred_2_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
modeling=modl1,
evaluating=list(MSE=eval1)
)
#summary(tspred_2_specs)
#Running the first time series prediction process
tspred_2_subset <- subset(tspred_2_specs, data=CATS[3])
tspred_2_prep <- preprocess(tspred_2_subset,prep_test=FALSE)
tspred_2_train <- train(tspred_2_prep)
tspred_2_pred <- predict(tspred_2_train, onestep=TRUE)
tspred_2_postp <- postprocess(tspred_2_pred)
tspred_2_eval <- evaluate(tspred_2_postp)
View(tspred_2_eval)
test_i[p]
tail(train_data,2)
f
source('~/GitHub/TSPred/dev/18.09/modeling.r')
source('~/GitHub/TSPred/dev/18.09/tspred.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list())
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3,
MM=proc7,
SW=proc4,
NAS=proc6),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
View(tspred_1_eval)
#Defining (not running) the first time series prediction process
tspred_2_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
modeling=modl1,
evaluating=list(MSE=eval1)
)
#summary(tspred_2_specs)
#Running the first time series prediction process
tspred_2_subset <- subset(tspred_2_specs, data=CATS[3])
tspred_2_prep <- preprocess(tspred_2_subset,prep_test=FALSE)
tspred_2_train <- train(tspred_2_prep)
tspred_2_pred <- predict(tspred_2_train, onestep=TRUE)
tspred_2_postp <- postprocess(tspred_2_pred)
tspred_2_eval <- evaluate(tspred_2_postp)
View(tspred_2_eval)
save.image("~/GitHub/TSPred/dev/18.09/Usage.RData")
source('~/GitHub/TSPred/dev/18.09/tspred.r')
proc1 <- LT(base=2)
proc2 <- BCT(lambda=NULL)
proc3 <- WT(level=1, filter="bl14")#,c("la8","d4","bl14","c6"),
#prep_par=list(model="arima",h=20))
proc4 <- SW(window_len = 6)
proc5 <- subsetting(test_len=20)
proc6 <- NAS(na.action=na.omit)
proc7 <- MinMax()
#Obtaining objects of the modeling class
modl1 <- ARIMA()
modl2 <- NNET(size=5,train_par=list())
#Obtaining objects of the evaluating class
eval1 <- MSE()
#Defining (not running) the first time series prediction process
tspred_1_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3,
MM=proc7,
SW=proc4,
NAS=proc6),
modeling=modl2,
evaluating=list(MSE=eval1)
)
#summary(tspred_1_specs)
#Running the first time series prediction process
tspred_1_subset <- subset(tspred_1_specs, data=CATS[3])
tspred_1_prep <- preprocess(tspred_1_subset,prep_test=TRUE)
tspred_1_train <- train(tspred_1_prep)
tspred_1_pred <- predict(tspred_1_train, onestep=TRUE)
tspred_1_postp <- postprocess(tspred_1_pred)
tspred_1_eval <- evaluate(tspred_1_postp)
View(tspred_1_eval)
#Defining (not running) the first time series prediction process
tspred_2_specs <- tspred(
subsetting=proc5,
processing=list(
BCT=proc2,
WT=proc3),
modeling=modl1,
evaluating=list(MSE=eval1)
)
#summary(tspred_2_specs)
#Running the first time series prediction process
tspred_2_subset <- subset(tspred_2_specs, data=CATS[3])
tspred_2_prep <- preprocess(tspred_2_subset,prep_test=FALSE)
tspred_2_train <- train(tspred_2_prep)
tspred_2_pred <- predict(tspred_2_train, onestep=TRUE)
tspred_2_postp <- postprocess(tspred_2_pred)
tspred_2_eval <- evaluate(tspred_2_postp)
View(tspred_2_eval)
save.image("~/GitHub/TSPred/dev/18.09/Usage.RData")
