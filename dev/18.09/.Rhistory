evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_rfrst_results <- workflow(tspred_an_rfrst,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=TRUE)
View(tspred_an_rfrst_results)
fitted(tspred_an_rfrst_results$model$V3)
source('~/GitHub/TSPred/dev/18.09/modeling_subclasses.r')
tspred_an_rbf <- tspred(
subsetting=subsetting(test_len=20),
modeling=RBF(size=5, train_par=list(maxit=1000,
initFuncParams=c(0, 1, 0, 0.01, 0.01),
learnFuncParams=c(1e-8, 0, 1e-8, 0.1, 0.8), linOut=TRUE),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_rfrst_results <- workflow(tspred_an_rfrst,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=TRUE)
View(tspred_an_rfrst_results)
tspred_an_rfrst <- tspred(
subsetting=subsetting(test_len=20),
modeling=RFrst(ntree=1000, sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_rfrst_results <- workflow(tspred_an_rfrst,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=TRUE)
View(tspred_an_rfrst_results)
tspred_an_rbf <- tspred(
subsetting=subsetting(test_len=20),
modeling=RBF(size=5, train_par=list(maxit=1000,
initFuncParams=c(0, 1, 0, 0.01, 0.01),
learnFuncParams=c(1e-8, 0, 1e-8, 0.1, 0.8), linOut=TRUE),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_rbf_results <- workflow(tspred_an_rbf,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=TRUE)
View(tspred_an_rbf_results)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
tspred_an_rbf <- tspred(
subsetting=subsetting(test_len=20),
modeling=RBF(size=5, train_par=list(maxit=1000,
initFuncParams=c(0, 1, 0, 0.01, 0.01),
learnFuncParams=c(1e-8, 0, 1e-8, 0.1, 0.8), linOut=TRUE),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_rbf_results <- workflow(tspred_an_rbf,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=TRUE)
View(tspred_an_rbf_results)
fitted(mdl)
residuals(mdl)
1+NULL
tspred_an_rbf <- tspred(
subsetting=subsetting(test_len=20),
modeling=RBF(size=5, train_par=list(maxit=1000,
initFuncParams=c(0, 1, 0, 0.01, 0.01),
learnFuncParams=c(1e-8, 0, 1e-8, 0.1, 0.8), linOut=TRUE),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_rbf_results <- workflow(tspred_an_rbf,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=TRUE)
View(tspred_an_rbf_results)
class(mdl)
summary(mdl)
names(mdl)
mdl
plotIterativeError(mdl)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
tspred_an_rbf <- tspred(
subsetting=subsetting(test_len=20),
modeling=RBF(size=5, train_par=list(maxit=1000,
initFuncParams=c(0, 1, 0, 0.01, 0.01),
learnFuncParams=c(1e-8, 0, 1e-8, 0.1, 0.8), linOut=TRUE),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_rbf_results <- workflow(tspred_an_rbf,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=TRUE)
View(tspred_an_rbf_results)
tspred_an_rbf <- tspred(
subsetting=subsetting(test_len=20),
modeling=RBF(size=5, train_par=list(maxit=100,
initFuncParams=c(0, 1, 0, 0.01, 0.01),
learnFuncParams=c(1e-8, 0, 1e-8, 0.1, 0.8), linOut=TRUE),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_rbf_results <- workflow(tspred_an_rbf,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=TRUE)
View(tspred_an_rbf_results)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
source('~/GitHub/TSPred/dev/18.09/tspred.r')
tspred_an_rbf <- tspred(
subsetting=subsetting(test_len=20),
modeling=RBF(size=5, train_par=list(maxit=100,
initFuncParams=c(0, 1, 0, 0.01, 0.01),
learnFuncParams=c(1e-8, 0, 1e-8, 0.1, 0.8), linOut=TRUE),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_rbf_results <- workflow(tspred_an_rbf,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=TRUE)
View(tspred_an_rbf_results)
attributes(tspred_an_rfrst_results$model$V3)
fitted(tspred_an_rfrst_results$model$V3)
tspred_an_rfrst_results$model$V3$y
fitted(tspred_an_nnet_results$model$V3)
fitted(tspred_an_rfrst_results$model$V3)
fitted(tspred_an_rfrst_results$model$V3$y)
tspred_an_rfrst_results$model$V3$y
tspred_an_rfrst_results$model$V3$predicted
source('~/GitHub/TSPred/dev/18.09/modeling_subclasses.r')
fitted(tspred_an_rfrst_results$model$V3)
residuals(tspred_an_rfrst_results$model$V3)
source('~/GitHub/TSPred/dev/18.09/modeling_subclasses.r')
residuals(tspred_an_rfrst_results$model$V3)
source('~/GitHub/TSPred/dev/18.09/evaluating.r')
tspred_an_rbf <- tspred(
subsetting=subsetting(test_len=20),
modeling=RBF(size=5, train_par=list(maxit=100,
initFuncParams=c(0, 1, 0, 0.01, 0.01),
learnFuncParams=c(1e-8, 0, 1e-8, 0.1, 0.8), linOut=TRUE),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_rbf_results <- workflow(tspred_an_rbf,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=TRUE)
View(tspred_an_rbf_results)
fitted(mdl)
attributes(mdl)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
source('~/GitHub/TSPred/dev/18.09/modeling_subclasses.r')
source('~/GitHub/TSPred/dev/18.09/evaluating.r')
tspred_an_nnet_results <- workflow(tspred_an_nnet,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=TRUE)
View(tspred_an_nnet_results)
#Defining the time series prediction process: AN-RFrst
tspred_an_rfrst <- tspred(
subsetting=subsetting(test_len=20),
modeling=RFrst(ntree=1000, sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_rfrst_results <- workflow(tspred_an_rfrst,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=TRUE)
View(tspred_an_rfrst_results)
tspred_an_nnet <- tspred(
subsetting=subsetting(test_len=20),
modeling=NNET(size=5, sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_nnet_results <- workflow(tspred_an_nnet,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=FALSE)
View(tspred_an_nnet_results)
tspred_an_rfrst <- tspred(
subsetting=subsetting(test_len=20),
modeling=RFrst(ntree=1000, sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_rfrst_results <- workflow(tspred_an_rfrst,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=FALSE)
View(tspred_an_rfrst_results)
tspred_an_rbf <- tspred(
subsetting=subsetting(test_len=20),
modeling=RBF(size=5, train_par=list(maxit=100,
initFuncParams=c(0, 1, 0, 0.01, 0.01),
learnFuncParams=c(1e-8, 0, 1e-8, 0.1, 0.8), linOut=TRUE),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_rbf_results <- workflow(tspred_an_rbf,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=FALSE)
View(tspred_an_rbf_results)
source('~/GitHub/TSPred/dev/18.09/modeling_subclasses.r')
tspred_an_svm <- tspred(
subsetting=subsetting(test_len=20),
modeling=SVM(sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_svm_results <- workflow(tspred_an_svm,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=FALSE)
View(tspred_an_svm_results)
source('~/GitHub/TSPred/dev/18.09/modeling_subclasses.r')
tspred_an_mlp <- tspred(
subsetting=subsetting(test_len=20),
modeling=MLP(size=5, train_par=list(learnFuncParams=c(0.1), maxit=1000),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_mlp_results <- workflow(tspred_an_mlp,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=FALSE)
View(tspred_an_mlp_results)
source('~/GitHub/TSPred/dev/18.09/modeling_subclasses.r')
tspred_an_elm <- tspred(
subsetting=subsetting(test_len=20),
modeling=ELM(train_par=list(nhid = 1000, actfun = 'purelin',
init_weights = "uniform_negative", bias = TRUE, verbose = T),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_elm_results <- workflow(tspred_an_elm,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=FALSE)
View(tspred_an_elm_results)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
tspred_an_elm <- tspred(
subsetting=subsetting(test_len=20),
modeling=ELM(train_par=list(nhid = 1000, actfun = 'purelin',
init_weights = "uniform_negative", bias = TRUE, verbose = T),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_elm_results <- workflow(tspred_an_elm,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=FALSE)
View(tspred_an_elm_results)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
source('~/GitHub/TSPred/dev/18.09/modeling.r')
tspred_an_elm <- tspred(
subsetting=subsetting(test_len=20),
modeling=ELM(train_par=list(nhid = 1000, actfun = 'purelin',
init_weights = "uniform_negative", bias = TRUE, verbose = T),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_elm_results <- workflow(tspred_an_elm,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=FALSE)
View(tspred_an_elm_results)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
tspred_an_elm <- tspred(
subsetting=subsetting(test_len=20),
modeling=ELM(train_par=list(nhid = 1000, actfun = 'purelin',
init_weights = "uniform_negative", bias = TRUE, verbose = T),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_elm_results <- workflow(tspred_an_elm,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=FALSE)
View(tspred_an_elm_results)
tspred_an_mlp <- tspred(
subsetting=subsetting(test_len=20),
modeling=MLP(size=5, train_par=list(learnFuncParams=c(0.1), maxit=1000),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_mlp_results <- workflow(tspred_an_mlp,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=FALSE)
View(tspred_an_mlp_results)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
tspred_an_elm <- tspred(
subsetting=subsetting(test_len=20),
modeling=ELM(train_par=list(nhid = 1000, actfun = 'purelin',
init_weights = "uniform_negative", bias = TRUE, verbose = T),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_elm_results <- workflow(tspred_an_elm,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=FALSE)
View(tspred_an_elm_results)
as.matrix(input)
class(newdata)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
tspred_an_elm <- tspred(
subsetting=subsetting(test_len=20),
modeling=ELM(train_par=list(nhid = 1000, actfun = 'purelin',
init_weights = "uniform_negative", bias = TRUE, verbose = T),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_elm_results <- workflow(tspred_an_elm,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=FALSE)
View(tspred_an_elm_results)
class(proc_res)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
source('~/GitHub/TSPred/dev/18.09/tspred.r')
tspred_an_elm <- tspred(
subsetting=subsetting(test_len=20),
modeling=ELM(train_par=list(nhid = 1000, actfun = 'purelin',
init_weights = "uniform_negative", bias = TRUE, verbose = T),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_elm_results <- workflow(tspred_an_elm,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=FALSE)
View(tspred_an_elm_results)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
class(tspred_an_nnet_results$model$V3)
"list" %in% class(tspred_an_nnet_results$model$V3)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
tspred_an_elm <- tspred(
subsetting=subsetting(test_len=20),
modeling=ELM(train_par=list(nhid = 1000, actfun = 'purelin',
init_weights = "uniform_negative", bias = TRUE, verbose = T),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_elm_results <- workflow(tspred_an_elm,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=FALSE)
View(tspred_an_elm_results)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
tspred_an_elm <- tspred(
subsetting=subsetting(test_len=20),
modeling=ELM(train_par=list(nhid = 1000, actfun = 'purelin',
init_weights = "uniform_negative", bias = TRUE, verbose = T),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
#summary(tspred_an_nnet)
#Running the time series prediction process
tspred_an_elm_results <- workflow(tspred_an_elm,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=FALSE)
View(tspred_an_elm_results)
source('~/GitHub/TSPred/dev/18.09/modeling_subclasses.r')
tspred_an_rbf <- tspred(
subsetting=subsetting(test_len=20),
modeling=RBF(size=5, train_par=list(maxit=100,
initFuncParams=c(0, 1, 0, 0.01, 0.01),
learnFuncParams=c(1e-8, 0, 1e-8, 0.1, 0.8), linOut=TRUE),
sw=SW(window_len=6), proc=list(AN=AN())),
evaluating=list(MSE=MSE())
)
tspred_an_rbf_results <- workflow(tspred_an_rbf,data=CATS[3],prep_test=TRUE,onestep=TRUE,eval_fitness=FALSE)
View(tspred_an_rbf_results)
tspred_arima <- tspred(
subsetting=subsetting(test_len=20),
modeling=ARIMA(),
evaluating=list(MSE=MSE())
)
tspred_arima_results <- workflow(tspred_arima,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_arima_results)
tspred_ets <- tspred(
subsetting=subsetting(test_len=20),
modeling=ARIMA(),
evaluating=list(MSE=MSE())
)
tspred_ets_results <- workflow(tspred_ets,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_ets_results)
tspred_ets <- tspred(
subsetting=subsetting(test_len=20),
modeling=ETS(),
evaluating=list(MSE=MSE())
)
tspred_ets_results <- workflow(tspred_ets,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_ets_results)
source('~/GitHub/TSPred/dev/18.09/modeling_subclasses.r')
source('~/GitHub/TSPred/dev/18.09/evaluating.r')
tspred_arima <- tspred(
subsetting=subsetting(test_len=20),
modeling=ARIMA(),
evaluating=list(MSE=MSE())
)
tspred_arima_results <- workflow(tspred_arima,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_arima_results)
tspred_ets <- tspred(
subsetting=subsetting(test_len=20),
modeling=ETS(train_par=list(h=20, initial="optimal")),
evaluating=list(MSE=MSE())
)
tspred_ets_results <- workflow(tspred_ets,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_ets_results)
tspred_hw <- tspred(
subsetting=subsetting(test_len=20),
modeling=HW(train_par=list(h=20, initial="optimal")),
evaluating=list(MSE=MSE())
)
tspred_hw_results <- workflow(tspred_hw,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_hw_results)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
tspred_hw <- tspred(
subsetting=subsetting(test_len=20),
modeling=HW(train_par=list(h=20, initial="optimal")),
evaluating=list(MSE=MSE())
)
tspred_hw_results <- workflow(tspred_hw,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_hw_results)
h
frequency(x)
source('~/GitHub/TSPred/dev/18.09/modeling.r')
tspred_tf <- tspred(
subsetting=subsetting(test_len=20),
modeling=TF(train_par=list(h=20)),
evaluating=list(MSE=MSE())
)
tspred_tf_results <- workflow(tspred_tf,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_tf_results)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
tspred_tf <- tspred(
subsetting=subsetting(test_len=20),
modeling=TF(train_par=list(h=20)),
evaluating=list(MSE=MSE())
)
tspred_tf_results <- workflow(tspred_tf,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_tf_results)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
tspred_tf <- tspred(
subsetting=subsetting(test_len=20),
modeling=TF(train_par=list(h=20)),
evaluating=list(MSE=MSE())
)
tspred_tf_results <- workflow(tspred_tf,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_tf_results)
tspred_tf <- tspred(
subsetting=subsetting(test_len=20),
modeling=TF(train_par=list(h=1)),
evaluating=list(MSE=MSE())
)
tspred_tf_results <- workflow(tspred_tf,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_tf_results)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
tspred_tf <- tspred(
subsetting=subsetting(test_len=20),
modeling=TF(train_par=list(h=1)),
evaluating=list(MSE=MSE())
)
tspred_tf_results <- workflow(tspred_tf,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_tf_results)
source('~/GitHub/TSPred/dev/18.09/processing_subclasses.r')
save.image("~/GitHub/TSPred/dev/18.09/Usage.RData")
source('~/GitHub/TSPred/dev/18.09/evaluating_subclasses.r')
source('~/GitHub/TSPred/dev/18.09/evaluating_subclasses.r')
source('~/GitHub/TSPred/dev/18.09/evaluating_subclasses.r')
tspred_arima <- tspred(
subsetting=subsetting(test_len=20),
modeling=ARIMA(),
evaluating=list(MSE=MSE(),AIC=AIC())
)
tspred_arima_results <- workflow(tspred_arima,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_arima_results)
source('~/GitHub/TSPred/dev/18.09/evaluating_subclasses.r')
tspred_arima <- tspred(
subsetting=subsetting(test_len=20),
modeling=ARIMA(),
evaluating=list(MSE=MSE(),AIC=AIC())
)
tspred_arima_results <- workflow(tspred_arima,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_arima_results)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
tspred_arima <- tspred(
subsetting=subsetting(test_len=20),
modeling=ARIMA(),
evaluating=list(MSE=MSE(),AIC=AIC())
)
tspred_arima_results <- workflow(tspred_arima,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_arima_results)
obj$model[[m]]
mdl
tspred_arima <- tspred(
subsetting=subsetting(test_len=20),
modeling=ARIMA(),
evaluating=list(MSE=MSE(),AIC=AIC())
)
tspred_arima_results <- workflow(tspred_arima,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_arima_results)
ll(object)
lapply(list(object, ...), ll)
list(object, ...)
lapply(list(object, ...), ll)
lapply(list(object[[1]], ...), ll)
lapply(list(list(object), ...), ll)
lapply(list(object, ...), ll)
lapply(list(object), ll)
source('~/GitHub/TSPred/dev/18.09/evaluating.r')
source('~/GitHub/TSPred/dev/18.09/evaluating.r')
tspred_arima <- tspred(
subsetting=subsetting(test_len=20),
modeling=ARIMA(),
evaluating=list(MSE=MSE(),AIC=AIC())
)
tspred_arima_results <- workflow(tspred_arima,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_arima_results)
source('~/GitHub/TSPred/dev/18.09/tspred.r')
tspred_arima <- tspred(
subsetting=subsetting(test_len=20),
modeling=ARIMA(),
evaluating=list(MSE=MSE(),AIC=AIC())
)
tspred_arima_results <- workflow(tspred_arima,data=CATS[3],prep_test=FALSE,onestep=TRUE)
View(tspred_arima_results)
source('~/GitHub/TSPred/dev/18.09/evaluating.r')
AIC(tspred_an_nnet$model$V3)
AIC(tspred_an_nnet_results$model$V3)
AIC(tspred_arima_results$model$V3)
AIC(tspred_arima_results$model$V3)
BIC(tspred_arima_results$model$V3)
BIC(tspred_arima_results$model$V3[1])
BIC(tspred_arima_results$model$V3[[1]])
class(tspred_arima_results$model$V3)
AIC(tspred_arima_results$model$V3)
stats::AIC(tspred_arima_results$model$V3)
stats::AIC(tspred_an_nnet_results$model$V3)
save.image("~/GitHub/TSPred/dev/18.09/Usage.RData")
